{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","className","content","onClick","services_notes","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","props","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","components_Notification","map","components_Note","key","find","n","changedNote","objectSpread","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","value","onChange","target","type","components_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a2a33927.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n    const label = note.important\n        ? 'make not important' : 'make important'\n\n    return (\n        <li className='note'>\n            {note.content}\n            <button onClick={toggleImportance}>{label}</button>\n        </li>\n    )\n}\nexport default Note","import axios from 'axios'\nconst baseUrl = '/api/notes'\n//https://limitless-shore-21172.herokuapp.com\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    const nonExisting = {\n        id: 10000,\n        content: 'This note is not saved to server',\n        date: '2019-05-30T17:30:31.098Z',\n        important: true,\n    }\n    return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default {getAll, create, update}","import React from \"react\";\nconst Notification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"error\">\n            {message}\n        </div>\n    )\n}\n\nexport default Notification;","import React from 'react';\n\nconst Footer = () => {\n    const footerStyle = {\n        color: 'green',\n        fontStyle: 'italic',\n        fontSize: 16\n    }\n    return (\n        <div style={footerStyle}>\n            <br />\n            <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\n        </div>\n    )\n}\n\nexport default Footer","import React, {useState, useEffect} from 'react';\nimport Note from './components/Note';\nimport noteService from './services/notes';\nimport Notification from './components/Notification';\nimport Footer from \"./components/Footer\";\n\n\n// const Header = ({course})=>(\n//   <div>\n//     <h1>{course}</h1>\n//   </div>\n// )\n//\n// const Course = ({ course }) => (\n//   <div>\n//     <Header course={course} />\n//   </div>\n// )\n\n\nconst App = (props) => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('a new note...')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState('')\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find(n=>n.id===id);\n    const changedNote = {...note, important: !note.important}\n\n    noteService.update(id, changedNote).then(returnedNote=>{\n        setNotes(notes.map(note=> note.id !== id? note: returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(`Note '${note.content}' was already removed from server`);\n        setTimeout(()=>setErrorMessage(null), 5000);\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  useEffect(()=>{\n    noteService.getAll()\n      .then((initialNotes)=>{\n        setNotes(initialNotes)\n      })\n  },[])\n  const notesToShow = showAll ? notes: notes.filter(note=> note.important);\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5\n    }\n\n    noteService\n      .create(noteObject)\n      .then((returnedNote)=>{\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n\n      })\n  }\n\n  \n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) =>\n          <Note key={note.id} note={note} toggleImportance={()=>toggleImportanceOf(note.id)}/>\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange}/>\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}